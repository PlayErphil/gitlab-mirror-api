openapi: 3.1.0
info:
  title: DUC App Developer
  version: '1.0'
  description: |
    # Introduction
    Welcome to the Duc App API documentation. You can explore the different ways to use our API and choose the right one for you below.
  termsOfService: 'https://ducapp.com/statics/en/terms_conditions'
  contact:
    email: support@ducapp.com
    name: DUC App Support
  license:
    name: Â© Copyright 2021 D.U.C. App Corporation. All rights reserved.
    url: 'http://api.ducapp.com'
servers:
  - url: 'http://api.ducapp.com'
    description: Website
paths:
  /transactions/buy/card:
    post:
      summary: Buy Funds with Card
      operationId: BuyFundsCard
      responses:
        '201':
          $ref: '#/components/responses/BuyResponse'
        '400':
          description: Bad Request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  $ref: '#/components/schemas/Amount'
                currency:
                  $ref: '#/components/schemas/Currency'
                concept:
                  $ref: '#/components/schemas/Concept'
                creditCardID:
                  $ref: '#/components/schemas/CardHolderName'
                cardNumber:
                  $ref: '#/components/schemas/CardNumber'
                cvc:
                  $ref: ''
                '':
                  type: string
          application/xml:
            schema:
              type: object
              properties: {}
          multipart/form-data:
            schema:
              type: object
              properties: {}
          text/html:
            schema:
              type: object
              properties: {}
          text/plain:
            schema:
              type: object
              properties: {}
          application/EDI-X12:
            schema:
              type: object
              properties: {}
          application/EDIFACT:
            schema:
              type: object
              properties: {}
        description: ''
      description: The following endpoint describes how to add funds to your wallet with a credit card.
      security:
        - SecretApiKey: []
      tags:
        - buy
    parameters: []
  /transactions/buy/googlepay:
    post:
      summary: ''
      operationId: AddFundsGooglePay
      responses:
        '200':
          description: OK
      tags:
        - buy
    parameters: []
  /transactions/buy/person:
    post:
      summary: ''
      operationId: AddFundsPerson
      responses:
        '200':
          description: OK
      tags:
        - buy
    parameters: []
  /transactions/buy/applepay:
    post:
      summary: ''
      operationId: AddFundsApplePay
      responses:
        '200':
          description: OK
      tags:
        - buy
    parameters: []
  /transactions/buy/email:
    post:
      summary: ''
      operationId: AddFundsE-transfer
      responses:
        '200':
          description: OK
      tags:
        - buy
    parameters: []
  /transactions/buy/bank:
    post:
      summary: ''
      operationId: AddFundsBank
      responses:
        '200':
          description: OK
      tags:
        - buy
    parameters: []
  '/account/:id':
    get:
      summary: ''
      operationId: GetAccountInformation
      responses:
        '200':
          description: OK
    post:
      summary: ''
      operationId: 'post-account-:id'
      responses:
        '200':
          description: OK
  /transactions/send/topup:
    post:
      summary: ''
      operationId: SendTopUp
      responses:
        '200':
          description: OK
      description: ''
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                '':
                  type: string
      security:
        - SecretApiKey: []
      tags:
        - send
    parameters: []
    get:
      summary: Get Top-up Transfer Info
      operationId: GetTopUpInfo
      responses:
        '200':
          description: OK
      description: This endpoint describes how to get the info of a topup
      security:
        - SecretApiKey: []
      tags:
        - send
  /transactions/add: {}
  /transactions/send/email:
    post:
      summary: Email Money Transfer
      operationId: SendFundsEmail
      responses:
        '201':
          $ref: '#/components/responses/SendResponse'
        '400':
          description: Bad Request
      description: Operation to send money through email money transfer.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  $ref: '#/components/schemas/Amount'
                currency:
                  $ref: '#/components/schemas/Currency'
                concept:
                  $ref: '#/components/schemas/Concept'
                email:
                  $ref: '#/components/schemas/EmailToSend'
                walletAddress:
                  $ref: '#/components/schemas/WalletAddress'
              required:
                - amount
                - currency
                - email
        description: ''
      security:
        - SecretApiKey: []
      tags:
        - send
    parameters: []
  /transactions/send/person:
    post:
      summary: P2P Transfer
      operationId: SendFundsPerson
      responses:
        '201':
          $ref: '#/components/responses/SendResponse'
        '400':
          description: Bad Request
      description: Send funds to a person/bussiness account within the DUC App enviroment. Your funds will be received in his DUC App wallet
      security:
        - SecretApiKey: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                toAddress:
                  $ref: '#/components/schemas/ToAddress'
                amount:
                  $ref: '#/components/schemas/Amount'
                currency:
                  $ref: '#/components/schemas/Currency'
                concept:
                  $ref: '#/components/schemas/Concept'
                walletAddress:
                  $ref: '#/components/schemas/WalletAddress'
              required:
                - toAddress
                - amount
                - currency
      tags:
        - send
    parameters: []
  /transactions/send/delivery:
    post:
      summary: Home Delivery
      operationId: SendFundsCountry
      responses:
        '201':
          $ref: '#/components/responses/SendResponse'
        '400':
          description: Bad Request
      description: 'This endpoint describes how to send money to a home, place or person in cash.'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                amount:
                  $ref: '#/components/schemas/Amount'
                currency:
                  $ref: '#/components/schemas/Currency'
                concept:
                  $ref: '#/components/schemas/Concept'
                deliveryAddress:
                  $ref: '#/components/schemas/DeliveryAddress'
                deliveryContact:
                  $ref: '#/components/schemas/ContactPhone'
                deliveryID:
                  $ref: '#/components/schemas/DeliveryIdentity'
                deliveryPhone:
                  $ref: '#/components/schemas/DeliveryPhone'
                deliveryCountry:
                  $ref: '#/components/schemas/DeliveryCountry'
                deliveryArea:
                  $ref: '#/components/schemas/DeliveryArea'
                deliveryCurrency:
                  $ref: '#/components/schemas/DeliveryCurrency'
                deliveryAmount:
                  $ref: '#/components/schemas/DeliveryAmount'
                deliveryCountryCode:
                  $ref: '#/components/schemas/DeliveryCountryCode'
                deliveryZone:
                  $ref: '#/components/schemas/DeliveryZone'
                deliveryCity:
                  $ref: '#/components/schemas/DeliveryCity'
                walletAddress:
                  $ref: '#/components/schemas/WalletAddress'
                deliveryLastName:
                  $ref: '#/components/schemas/DeliveryLastName'
                deliverySecondLastName:
                  $ref: '#/components/schemas/DeliverySecondLastName'
                service:
                  $ref: '#/components/schemas/Service'
              required:
                - amount
                - currency
                - deliveryAddress
                - deliveryContact
                - deliveryID
                - deliveryPhone
                - deliveryCountry
                - deliveryArea
                - deliveryCurrency
                - deliveryAmount
                - deliveryCountryCode
                - deliveryZone
                - deliveryCity
                - deliveryLastName
                - deliverySecondLastName
                - service
        description: ''
      parameters: []
      security:
        - SecretApiKey: []
      tags:
        - send
    parameters: []
  /transactions/send/creditcard:
    post:
      summary: Cash Out to Credit Card
      operationId: SendFundsCreditCard
      responses:
        '201':
          $ref: '#/components/responses/SendResponse'
        '400':
          description: Bad Request
      description: This endpoint describes how to send money to a credit or debit card.
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                service:
                  $ref: '#/components/schemas/Service'
                amount:
                  $ref: '#/components/schemas/Amount'
                currency:
                  $ref: '#/components/schemas/Currency'
                concept:
                  $ref: '#/components/schemas/Concept'
                cardNumber:
                  $ref: '#/components/schemas/CardNumber'
                cardHolderName:
                  $ref: '#/components/schemas/CardHolderName'
                verifyCardNumber:
                  $ref: '#/components/schemas/CardNumber'
                bankName:
                  $ref: '#/components/schemas/BankName'
                contactPhone:
                  $ref: '#/components/schemas/ContactPhone'
                deliveryCurrency:
                  $ref: '#/components/schemas/DeliveryCurrency'
                deliveryCountry:
                  $ref: '#/components/schemas/DeliveryCountry'
                deliveryAmount:
                  $ref: '#/components/schemas/DeliveryAmount'
                deliveryCountryCode:
                  $ref: '#/components/schemas/DeliveryCountryCode'
                walletAddress:
                  $ref: '#/components/schemas/WalletAddress'
              required:
                - service
                - amount
                - currency
                - cardNumber
                - cardHolderName
                - verifyCardNumber
                - bankName
                - contactPhone
                - deliveryCurrency
                - deliveryCountry
                - deliveryAmount
                - deliveryCountryCode
      parameters: []
      security:
        - SecretApiKey: []
      tags:
        - send
  /transactions/exchange:
    post:
      summary: Exchange Currency
      operationId: transactionsExchange
      responses:
        '201':
          description: Created
          content:
            application/json:
              schema:
                type: object
                properties:
                  fromCurrencyLeft:
                    type: number
                  toCurrencyCurrent:
                    type: number
                  toCurrencyAdded:
                    type: number
                  fromCurrencySubtracted:
                    type: number
        '400':
          description: Bad Request
      description: You may want to exchange your funds between currencies to perform operations. This endpoint describes how.
      security:
        - SecretApiKey: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                fromCurrency:
                  $ref: '#/components/schemas/FromCurrency'
                toCurrency:
                  $ref: '#/components/schemas/ToCurrency'
                amount:
                  $ref: '#/components/schemas/Amount'
                walletAddress:
                  $ref: '#/components/schemas/WalletAddress'
              required:
                - fromCurrency
                - toCurrency
                - amount
      tags:
        - send
components:
  schemas:
    User:
      title: DeliveryCity
      type: object
      description: deliveryCity
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
    ErrorBody:
      title: ErrorBody
      type: object
      properties:
        type:
          type: string
        status:
          type: integer
        detail:
          type: string
        '':
          type: string
    Service:
      title: Service
      type: string
      description: ''
    Amount:
      title: Amount
      type: number
      description: Amount that you want to use in the transaction
    Currency:
      title: Currency
      type: string
      description: Currency that you want to use to perfom transaction.
    Concept:
      allOf: []
    BankName:
      title: BankName
      type: string
      description: Name of the bank of your credit/debit card
    CardNumber:
      title: CardNumber
      type: integer
      description: Number of your credit/debit card
    CardHolderName:
      title: CardHolderName
      type: string
      description: Name of the card holder.
    ContactPhone:
      title: ContactPhone
      type: number
      description: Contact of the person who is going to recieve the money.
    DeliveryCountry:
      title: DeliveryCountry
      type: string
      description: Country where the money should be delivered
    DeliveryCurrency:
      title: DeliveryCurrency
      type: number
      description: Currency that you want to be used in the delivery.
    DeliveryAmount:
      title: DeliveryAmount
      type: number
      description: Amount that will be recieved.
    DeliveryCountryCode:
      title: DeliveryCountryCode
      type: number
      description: Code of the country of delivery.
    WalletAddress:
      title: WalletAddress
      type: number
      description: Wallet Address of the user that is perfoming the transaction. This is not required and if not filled your wallet address wil be used automatically.
    DeliveryAddress:
      title: DeliveryAddress
      type: string
      description: Address where you want the money to be delivered.
    DeliveryIdentity:
      title: DeliveryIdentity
      type: integer
      description: 'Number of any Identity card of the receiver. '
    DeliveryPhone:
      title: DeliveryPhone
      type: object
      properties:
        id:
          type: string
      description: The contact number of the person that is receiving the delivery.
    DeliveryArea:
      title: DeliveryArea
      type: string
      description: Area where the money will be delivered
    DeliveryZone:
      title: DeliveryZone
      type: string
      description: Zone where the money will be delivered
    DeliveryCity:
      title: DeliveryCity
      type: string
      description: City where the money will be delivered
    DeliveryLastName:
      title: DeliveryLastName
      type: string
      description: Last Name of the person that will recieve the money
    DeliverySecondLastName:
      title: DeliverySecondLastName
      type: string
      description: Second last name of the person that will receive the money
    EmailToSend:
      title: EmailToSend
      type: string
      description: Email of the person/business that will receive the money
    FromCurrency:
      title: FromCurrency
      type: string
      description: Currency you want to convert from.
    ToCurrency:
      title: ToCurrency
      type: string
      description: Currency you want to convert to.
    BuyAmount:
      title: BuyAmount
      type: number
      description: 'This is totally not necessary. What is the point of having this here? You already have the amount, why buy amount again?'
    ToAddress:
      title: ToAddress
      type: number
      description: 'Wallet address of the person/business you want to send the money to. Note that the address is not an email, is a the address of the DUC wallet'
    cvc:
      title: CVC
      type: integer
      description: Three digits on the back of your card
    ExpirationDate:
      title: ExpirationDate
      type: object
      description: Date of expiration of your credit/debit card.
      properties:
        month:
          type: integer
          description: Use two digits format E.g. 04
        year:
          type: integer
          description: Use two digits format E.g. 25
      required:
        - month
        - year
    CardStreetName:
      title: CardStreetName
      type: string
      description: Street Name where your card is registered.
    ZipCode:
      title: CardZipCode
      type: number
      description: ZipCode of the direction of your card.
  responses:
    BuyResponse:
      description: Response of a successful transactions-buy operation.
      content:
        application/json:
          schema:
            type: object
            properties:
              amountAdded:
                type: number
                description: Amount Added to the wallet.
              currentAmount:
                type: number
                description: Current Amount in the wallet.
      headers: {}
    SendResponse:
      description: Response of a successful transactions-send operation.
      content:
        application/json:
          schema:
            type: object
            properties:
              Amount sent:
                type: number
                description: Amount sent.
              Amount subtracted:
                type: number
                description: Amount used in the transaction.
              Amount left:
                type: number
                description: Current amount in your wallet.
  securitySchemes:
    HTTP:
      type: http
      scheme: basic
    SecretApiKey:
      name: DUC-APIKEY
      type: apiKey
      in: header
security:
  - SecretApiKey: []
  - API Key - 1: []
tags:
  - name: buy
  - name: send
